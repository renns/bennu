

*



General Tasks

* refactor the longpolling code so that we can return richer errors.  I.e. errors can have an error code and parms so the UI can give more complete error messages

* move SecurityContext into security package 

* use case, an alias based standing query where a labelchild is added after the label is created.  In this use case the label wouldn't get sent (but it should get sent once it is reachable)




Internet Of Things

  requirement - you should not be able to figure out if you are using the root/uber alias or not 

* querying on the agent scrubs certain agent fields
* remove agent id's from being surfaced sent to any clients (under the covers we have agent id's but nothing requires them).  This means the server will be responsible for injecting the agent id.  Also this would allow for our UI to work with a single agent server as well as a multi-agent server.








Raph Test Client Things

* improved default values on model objects
* added copy2 method
* soft delete no longer does a fetch (uses copy2 and sqlUpdate)
* added iplicit conversion

* can replace 
      def post(path: String, parms: Map[String, JValue]): Future[ChannelResponse]
   with
      def post(path: String, body: JValue): Future[ChannelResponse]
* ModelAssist create methods can be replaced with
    def upsert[T <: HasInternalId](t: T)(implicit ec: ExecutionContext): Future[T]
    
   







